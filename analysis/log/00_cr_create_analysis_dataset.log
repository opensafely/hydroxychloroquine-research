-----------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\GitHub\OpenSAFELY\hydroxychloroquine-research\analysis\log\00_cr_create_analysis_dataset.log
  log type:  text
 opened on:  21 Jun 2020, 20:41:21

. 
. /* SET FU DATES===============================================================*/ 
. * Censoring dates for each outcome (largely, last date outcome data available)
.  
. global testposcensor            = "23/04/2020" /*****************************************  figure out what this
>  should be */

. global onscoviddeathcensor      = "06/05/2020" /*this should be 7 days prior to the last recorded death*/

. global indexdate                        = "01/03/2020"

. 
. 
. 
. /* DROP VARAIBLES===========================================================*/
. 
. *flu_vaccine is combination of the three others
. drop flu_vaccine_tpp_table flu_vaccine_med flu_vaccine_clinical

. *pneumococcal_vaccine is combination of the three others
. drop pneumococcal_vaccine_tpp_table pneumococcal_vaccine_med pneumococcal_vaccine_clinical 

. 
. 
. 
. /* RENAME VARAIBLES===========================================================*/
. 
. rename bmi_date_measured                                bmi_date_measured
  (all newnames==oldnames)

. rename chronic_respiratory_excl_asthma          resp_excl_asthma

. 
. 
. /* CONVERT STRINGS TO DATE====================================================*/
. /* Comorb dates are given with month/year only, so adding day 15 to enable
>    them to be processed as dates                                                                               
>            */
. 
. foreach var of varlist   bmi_date_measured                                      ///
>                                                  cancer                                                        
>  ///
>                                                  chronic_cardiac_disease                        ///
>                                                  chronic_liver_disease                          ///
>                                                  creatinine_date                                        ///
>                                                  current_asthma                                         ///    
>  
>                                                  diabetes                                                      
>  ///
>                                                  hba1c_mmol_per_mol_date                        ///
>                                                  hba1c_percentage_date                          ///
>                                                  hypertension                                           ///
>                                                  esrf                                                          
>  ///                                              
>                                                  oral_presnisolone                                      ///    
>      ***********************NEED TO CORRECT NAMING IN STUDY DEF                           
>                                                  other_neuro_conditions                         ///
>                                                  permanent_immunodeficiency                     ///
>                                                  resp_excl_asthma                                       ///    
>                                           
>                                                  smoking_status_date                            ///
>                                                  temporary_immunodeficiency      {
  2.                                                         
.                 capture confirm string variable `var'
  3.                 if _rc!=0 {
  4.                         assert `var'==.
  5.                         rename `var' `var'_date
  6.                 }
  7.         
.                 else {
  8.                                 replace `var' = `var' + "-15"
  9.                                 rename `var' `var'_dstr
 10.                                 replace `var'_dstr = " " if `var'_dstr == "-15"
 11.                                 gen `var'_date = date(`var'_dstr, "YMD") 
 12.                                 order `var'_date, after(`var'_dstr)
 13.                                 drop `var'_dstr
 14.                 }
 15.         
.         format `var'_date %td
 16. }
variable bmi_date_measured was str7 now str10
(100,000 real changes made)
(40,000 real changes made)
(40,000 missing values generated)
variable cancer was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable chronic_cardiac_disease was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable chronic_liver_disease was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable creatinine_date was str7 now str10
(100,000 real changes made)
(5,000 real changes made)
(5,000 missing values generated)
variable current_asthma was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable diabetes was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable hba1c_mmol_per_mol_date was str7 now str10
(100,000 real changes made)
(5,000 real changes made)
(5,000 missing values generated)
variable hba1c_percentage_date was str7 now str10
(100,000 real changes made)
(5,000 real changes made)
(5,000 missing values generated)
variable hypertension was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable esrf was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable oral_presnisolone was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable other_neuro_conditions was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable permanent_immunodeficiency was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable resp_excl_asthma was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable smoking_status_date was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)
variable temporary_immunodeficiency was str7 now str10
(100,000 real changes made)
(90,000 real changes made)
(90,000 missing values generated)

. 
. * Note - outcome dates are handled separtely below 
. 
. 
. 
. /* RENAME VARAIBLES===========================================================*/
. *  An extra 'date' added to the end of some variable names, remove 
. 
. rename creatinine_date_date                     creatinine_measured_date

. rename smoking_status_date_date                 smoking_status_measured_date

. rename bmi_date_measured_date                   bmi_measured_date

. rename hba1c_percentage_date_date               hb1ac_percentage_date 

. rename hba1c_mmol_per_mol_date_date             hba1c_mmol_per_mol_date

. 
. 
. * Some names too long for loops below, shorten
. 
. rename permanent_immunodeficiency_date perm_immunodef_date

. rename temporary_immunodeficiency_date temp_immunodef_date

. 
. 
. 
. /* CREATE BINARY VARIABLES====================================================*/
. *  Make indicator variables for all conditions where relevant 
. 
. foreach var of varlist   cancer_date                                            ///
>                                                  chronic_cardiac_disease_date           ///
>                                                  chronic_liver_disease_date                     ///
>                                                  current_asthma_date                            ///     
>                                                  diabetes_date                                          ///
>                                                  hypertension_date                                      ///
>                                                  esrf_date                                                     
>  ///                                              
>                                                  oral_presnisolone_date                         ///            
>                           
>                                                  other_neuro_conditions_date            ///
>                                                  perm_immunodef_date                            ///
>                                                  resp_excl_asthma_date                          ///            
>                                   
>                                                  smoking_status_measured_date           ///
>                                                  temp_immunodef_date                     {
  2.         /* date ranges are applied in python, so presence of date indicates presence of 
>           disease in the correct time frame */ 
.         local newvar =  substr("`var'", 1, length("`var'") - 5)
  3.         gen `newvar' = (`var'!=. )
  4.         order `newvar', after(`var')
  5.         
. }

. 
. 
. 
. /* CREATE VARIABLES===========================================================*/
. 
. /* DEMOGRAPHICS */ 
. 
. * Sex
. gen male = 1 if sex == "M"
(50,730 missing values generated)

. replace male = 0 if sex == "F"
(50,730 real changes made)

. 
. * Ethnicity   ******************************************************************************** NEED TO ADD
. // replace ethnicity = .u if ethnicity == .
. //
. // label define ethnicity       1 "White"                                       ///
. //                                              2 "Mixed"                                       ///
. //                                              3 "Asian or Asian British"      ///
. //                                              4 "Black"                                       ///
. //                                              5 "Other"                                       ///
. //                                              .u "Unknown"
. //
. // label values ethnicity ethnicity
. 
. * STP 
. rename stp stp_old

. bysort stp_old: gen stp = 1 if _n==1
(99,990 missing values generated)

. replace stp = sum(stp)
(99,999 real changes made)

. drop stp_old

. 
. /*  IMD  */
. * Group into 5 groups
. rename imd imd_o

. egen imd = cut(imd_o), group(5) icodes

. 
. * add one to create groups 1 - 5 
. replace imd = imd + 1
(100,000 real changes made)

. 
. * - 1 is missing, should be excluded from population 
. replace imd = .u if imd_o == -1
(0 real changes made)

. drop imd_o

. 
. * Reverse the order (so high is more deprived)
. recode imd 5 = 1 4 = 2 3 = 3 2 = 4 1 = 5 .u = .u
(imd: 100000 changes made)

. 
. label define imd 1 "1 least deprived" 2 "2" 3 "3" 4 "4" 5 "5 most deprived" .u "Unknown"

. label values imd imd 

. 
. /*  Age variables  */ 
. 
. * Create categorised age
. recode age 18/39.9999 = 1 /// 
>            40/49.9999 = 2 ///
>                    50/59.9999 = 3 ///
>                60/69.9999 = 4 ///
>                    70/79.9999 = 5 ///
>                    80/max = 6, gen(agegroup) 
(79077 differences between age and agegroup)

. 
. label define agegroup   1 "18-<40" ///
>                                                 2 "40-<50" ///
>                                                 3 "50-<60" ///
>                                                 4 "60-<70" ///
>                                                 5 "70-<80" ///
>                                                 6 "80+"

.                                                 
. label values agegroup agegroup

. 
. * Create binary age
. recode age min/69.999 = 0 ///
>            70/max = 1, gen(age70)
(98856 differences between age and age70)

. 
. * Check there are no missing ages
. assert age < .

. assert agegroup < .

. assert age70 < .

. 
. * Create restricted cubic splines for age
. mkspline age = age, cubic nknots(4)

. 
. /*  Body Mass Index  */
. * NB: watch for missingness
. 
. * Recode strange values 
. replace bmi = . if bmi == 0 
(0 real changes made)

. replace bmi = . if !inrange(bmi, 15, 50)
(5,418 real changes made, 5,418 to missing)

. 
. * Restrict to within 10 years of index and aged > 16 
. gen bmi_time = (date("$indexdate", "DMY") - bmi_measured_date)/365.25
(40,000 missing values generated)

. gen bmi_age = age - bmi_time
(40,000 missing values generated)

. 
. replace bmi = . if bmi_age < 16 
(42,573 real changes made, 42,573 to missing)

. replace bmi = . if bmi_time > 10 & bmi_time != . 
(8,482 real changes made, 8,482 to missing)

. 
. * Set to missing if no date, and vice versa 
. replace bmi = . if bmi_measured_date == . 
(0 real changes made)

. replace bmi_measured_date = . if bmi == . 
(56,473 real changes made, 56,473 to missing)

. replace bmi_measured_date = . if bmi == . 
(0 real changes made)

. 
. gen     bmicat = .
(100,000 missing values generated)

. recode  bmicat . = 1 if bmi < 18.5
(bmicat: 86 changes made)

. recode  bmicat . = 2 if bmi < 25
(bmicat: 422 changes made)

. recode  bmicat . = 3 if bmi < 30
(bmicat: 603 changes made)

. recode  bmicat . = 4 if bmi < 35
(bmicat: 715 changes made)

. recode  bmicat . = 5 if bmi < 40
(bmicat: 777 changes made)

. recode  bmicat . = 6 if bmi < .
(bmicat: 924 changes made)

. replace bmicat = .u if bmi >= .
(96,473 real changes made, 96,473 to missing)

. 
. label define bmicat 1 "Underweight (<18.5)"     ///
>                                         2 "Normal (18.5-24.9)"          ///
>                                         3 "Overweight (25-29.9)"        ///
>                                         4 "Obese I (30-34.9)"           ///
>                                         5 "Obese II (35-39.9)"          ///
>                                         6 "Obese III (40+)"                     ///
>                                         .u "Unknown (.u)"

.                                         
. label values bmicat bmicat

. 
. * Create less  granular categorisation
. recode bmicat 1/3 .u = 1 4 = 2 5 = 3 6 = 4, gen(obese4cat)
(99914 differences between bmicat and obese4cat)

. 
. label define obese4cat  1 "No record of obesity"        ///
>                                                 2 "Obese I (30-34.9)"           ///
>                                                 3 "Obese II (35-39.9)"          ///
>                                                 4 "Obese III (40+)"             

. 
. label values obese4cat obese4cat

. order obese4cat, after(bmicat)

. 
. /*  Smoking  */
. 
. * Smoking 
. label define smoke 1 "Never" 2 "Former" 3 "Current" .u "Unknown (.u)"

. 
. gen     smoke = 1  if smoking_status == "N"
(98,042 missing values generated)

. replace smoke = 2  if smoking_status == "E"
(1,032 real changes made)

. replace smoke = 3  if smoking_status == "S"
(5,979 real changes made)

. replace smoke = .u if smoking_status == "M"
(1,031 real changes made, 1,031 to missing)

. replace smoke = .u if smoking_status == "" 
(90,000 real changes made, 90,000 to missing)

. 
. label values smoke smoke

. drop smoking_status

. 
. * Create non-missing 3-category variable for current smoking
. * Assumes missing smoking is never smoking 
. recode smoke .u = 1, gen(smoke_nomiss)
(91031 differences between smoke and smoke_nomiss)

. order smoke_nomiss, after(smoke)

. label values smoke_nomiss smoke

. 
. /* CLINICAL COMORBIDITIES */ 
. 
. 
. /* GP consultation rate */ 
. replace gp_consult_count = 0 if gp_consult_count <1 
(428 real changes made)

. 
. * those with no count assumed to have no visits 
. replace gp_consult_count = 0 if gp_consult_count == . 
(30,000 real changes made)

. gen gp_consult = (gp_consult_count >=1)

. 
. /*  Cancer  */
. *rename to make new vars stick to old code
. rename cancer_date cancer_ever_date

. rename cancer cancer_ever

. 
. /* Vaccines */ 
. replace pneumococcal_vaccine = 0 if pneumococcal_vaccine == . 
(90,000 real changes made)

. replace flu_vaccine = 0 if flu_vaccine == . 
(90,000 real changes made)

. 
. /*  Immunosuppression  */
. 
. * Immunosuppressed:
. * permanent immunodeficiency ever (HIV, aplastic anaemia , etc) OR 
. * temporary immunodeficiency in last year
. gen temp1  = perm_immunodef

. gen temp2  = inrange(temp_immunodef_date, (date("$indexdate", "DMY") - 365), date("$indexdate", "DMY"))

. 
. egen immunodef_any = rowmax(temp1 temp2)

. drop temp1 temp2

. order immunodef_any, after(temp_immunodef_date)

. 
. /* eGFR */
. 
. * Set implausible creatinine values to missing (Note: zero changed to missing)
. replace creatinine = . if !inrange(creatinine, 20, 3000) 
(367 real changes made, 367 to missing)

. 
. * Remove creatinine dates if no measurements, and vice versa 
. 
. replace creatinine = . if creatinine_measured_date == . 
(0 real changes made)

. replace creatinine_measured_date = . if creatinine == . 
(367 real changes made, 367 to missing)

. *replace creatinine_measured = . if creatinine == .   ***this is read as previous line since creatinine_measure
> d does not exist..
. 
. * Divide by 88.4 (to convert umol/l to mg/dl)
. gen SCr_adj = creatinine/88.4
(5,367 missing values generated)

. 
. gen min = .
(100,000 missing values generated)

. replace min = SCr_adj/0.7 if male==0
(48,027 real changes made)

. replace min = SCr_adj/0.9 if male==1
(46,606 real changes made)

. replace min = min^-0.329  if male==0
(48,027 real changes made)

. replace min = min^-0.411  if male==1
(46,606 real changes made)

. replace min = 1 if min<1
(26,339 real changes made)

. 
. gen max=.
(100,000 missing values generated)

. replace max=SCr_adj/0.7 if male==0
(48,027 real changes made)

. replace max=SCr_adj/0.9 if male==1
(46,606 real changes made)

. replace max=max^-1.209
(94,633 real changes made)

. replace max=1 if max>1
(73,661 real changes made)

. 
. gen egfr=min*max*141
(5,367 missing values generated)

. replace egfr=egfr*(0.993^age)
(93,550 real changes made)

. replace egfr=egfr*1.018 if male==0
(48,027 real changes made)

. label var egfr "egfr calculated using CKD-EPI formula with no eth"

. 
. * Categorise into ckd stages
. egen egfr_cat = cut(egfr), at(0, 15, 30, 45, 60, 5000)
(5,367 missing values generated)

. recode egfr_cat 0 = 5 15 = 4 30 = 3 45 = 2 60 = 0, generate(ckd_egfr)
(94633 differences between egfr_cat and ckd_egfr)

. 
. * 0 = "No CKD"  2 "stage 3a" 3 "stage 3b" 4 "stage 4" 5 "stage 5"
. 
. * Add in end stage renal failure and create a single CKD variable 
. * Missing assumed to not have CKD 
. gen ckd = 0

. replace ckd = 1 if ckd_egfr != . & ckd_egfr >= 1
(919 real changes made)

. replace ckd = 1 if esrf == 1
(9,907 real changes made)

. 
. label define ckd 0 "No CKD" 1 "CKD"

. label values ckd ckd

. label var ckd "CKD stage calc without eth"

. 
. * Create date (most recent measure prior to index)
. gen temp1_ckd_date = creatinine_measured_date if ckd_egfr >=1
(99,081 missing values generated)

. gen temp2_ckd_date = esrf_date if esrf == 1
(90,000 missing values generated)

. gen ckd_date = max(temp1_ckd_date,temp2_ckd_date) 
(89,174 missing values generated)

. format ckd_date %td 

. 
. /* Hb1AC */
. 
. /*  Diabetes severity  */
. 
. * Set zero or negative to missing
. replace hba1c_percentage   = . if hba1c_percentage <= 0
(626 real changes made, 626 to missing)

. replace hba1c_mmol_per_mol = . if hba1c_mmol_per_mol <= 0
(2,100 real changes made, 2,100 to missing)

. 
. /* Express  HbA1c as percentage  */ 
. 
. * Express all values as perecentage 
. noi summ hba1c_percentage hba1c_mmol_per_mol 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
hba1c_perc~e |     94,374    5.042101    1.962858   .0002071   13.25421
hba1c_mmol~l |     92,900    41.00756    18.86693   .0046989    124.425

. gen     hba1c_pct = hba1c_percentage 
(5,626 missing values generated)

. replace hba1c_pct = (hba1c_mmol_per_mol/10.929)+2.15 if hba1c_mmol_per_mol<. 
(92,900 real changes made)

. 
. * Valid % range between 0-20  
. replace hba1c_pct = . if !inrange(hba1c_pct, 0, 20) 
(0 real changes made)

. replace hba1c_pct = round(hba1c_pct, 0.1)
(99,650 real changes made)

. 
. /* Categorise hba1c and diabetes  */
. 
. * Group hba1c
. gen     hba1ccat = 0 if hba1c_pct <  6.5
(36,282 missing values generated)

. replace hba1ccat = 1 if hba1c_pct >= 6.5  & hba1c_pct < 7.5
(17,709 real changes made)

. replace hba1ccat = 2 if hba1c_pct >= 7.5  & hba1c_pct < 8
(6,360 real changes made)

. replace hba1ccat = 3 if hba1c_pct >= 8    & hba1c_pct < 9
(7,546 real changes made)

. replace hba1ccat = 4 if hba1c_pct >= 9    & hba1c_pct !=.
(4,318 real changes made)

. label define hba1ccat 0 "<6.5%" 1">=6.5-7.4" 2">=7.5-7.9" 3">=8-8.9" 4">=9"

. label values hba1ccat hba1ccat

. 
. * Create diabetes, split by control/not
. gen     diabcat = 1 if diabetes==0
(10,000 missing values generated)

. replace diabcat = 2 if diabetes==1 & inlist(hba1ccat, 0, 1)
(8,225 real changes made)

. replace diabcat = 3 if diabetes==1 & inlist(hba1ccat, 2, 3, 4)
(1,745 real changes made)

. replace diabcat = 4 if diabetes==1 & !inlist(hba1ccat, 0, 1, 2, 3, 4)
(30 real changes made)

. 
. label define diabcat    1 "No diabetes"                         ///
>                                                 2 "Controlled diabetes"         ///
>                                                 3 "Uncontrolled diabetes"       ///
>                                                 4 "Diabetes, no hba1c measure"

. label values diabcat diabcat

. 
. * Delete unneeded variables
. drop hba1c_pct hba1c_percentage hba1c_mmol_per_mol

. 
. /* OUTCOME AND SURVIVAL TIME==================================================*/
. 
. /*  Cohort entry and censor dates  */
. 
. * Date of cohort entry, 1 Mar 2020
. gen enter_date = date("$indexdate", "DMY")

. 
. * Date of study end (typically: last date of outcome data available)
. gen testposcensor_date                  = date("$testposcensor",                "DMY")

. gen onscoviddeathcensor_date    = date("$onscoviddeathcensor",  "DMY")

. 
. * Format the dates
. format  enter_date                                      ///
>                 testposcensor_date                      ///
>                 onscoviddeathcensor_date        %td

. 
. /*   Outcomes/censoring   */
. 
. * Outcomes: First test positive date, ONS-covid death
. * Censoring: First HCQ after baseline
. * Recode to dates from the strings 
. foreach var of varlist  died_date_ons           ///
>                                                 first_positive_test_date                ///
>                                                 /* ************************************************************
> * FIRST HCQ AFTER BL DATE */
{ required
r(100);

end of do-file

r(100);

. do "C:\Users\LSH130~1\AppData\Local\Temp\STD66f4_000000.tmp"

. 
. * Outcomes: First test positive date, ONS-covid death
. * Censoring: First HCQ after baseline
. * Recode to dates from the strings 
. foreach var of varlist  died_date_ons           ///
>                                                 first_positive_test_date                ///
>                                                 /* ************************************************************
> * FIRST HCQ AFTER BL DATE */ ///
>                                                 {                       
  2.         confirm string variable `var'
  3.         rename `var' `var'_dstr
  4.         gen `var' = date(`var'_dstr, "YMD")
  5.         drop `var'_dstr
  6.         format `var' %td 
  7. }
(90,000 missing values generated)
(90,000 missing values generated)

. 
. * Date of Covid death in ONS
. gen died_date_onscovid = died_date_ons if died_ons_covid_flag_any == 1
(98,946 missing values generated)

. 
. * Date of non-COVID death in ONS 
. * If missing date of death resulting died_date will also be missing
. gen died_date_onsnoncovid = died_date_ons if died_ons_covid_flag_any != 1 
(91,054 missing values generated)

. 
. format died_date_ons %td

. format died_date_onscovid %td 

. format died_date_onsnoncovid %td

. format first_positive_test_date %td

. /* format   ******************************************************************************** FIRST HCQ  DATE AF
> TER BL*/
. 
. * Only censor at first HCQ on or after baseline if in unexposed group. Do not censor among exposed group 
. *replace FIRST HCQ AFTER BL=. if hydroxychloroquine == 1
. 
. 
. * Binary indicators for outcomes
. gen onscoviddeath       = (died_date_onscovid   < .)

. gen onsnoncoviddeath = (died_date_onsnoncovid < .)

. gen firstpos            = (first_positive_test_date             < .)

. 
. /*  Create survival times  */
. 
. * For looping later, name must be stime_binary_outcome_name
. 
. * Survival time = last followup date (first: end study, first HCQ after baseline among unexposed, death, or tha
> t outcome)
. gen stime_onscoviddeath = min(onscoviddeathcensor_date, /*FIRST HCQ AFTER BL*/ died_date_ons)

. gen stime_firstpos      = min(testposcensor_date, /*FIRST HCQ AFTER BL*/ died_date_ons , first_positive_test_da
> te)  

. 
. * Equivalent to onscoviddeath, but creating a separate variable for clarity 
. gen stime_onsnoncoviddeath = min(onscoviddeathcensor_date,/*FIRST HCQ AFTER BL*/ died_date_ons)

. 
. * If outcome was after censoring occurred, set to zero
. replace onscoviddeath   = 0 if (died_date_onscovid      > onscoviddeathcensor_date) 
(384 real changes made)

. replace onsnoncoviddeath = 0 if (died_date_onsnoncovid > onscoviddeathcensor_date)
(3,378 real changes made)

. replace firstpos                = 0 if (first_positive_test_date                > testposcensor_date) 
(5,053 real changes made)

. 
. * Format date variables
. format  stime* %td 

. 
. 
. 
. 
. 
. 
. 
. 
end of do-file

. exit, clear
